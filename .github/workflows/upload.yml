name: Build wheels and upload to PyPI
on:
  workflow_dispatch

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pep517
        run: python -m pip install pep517

      - name: Build sdist
        run: python -m pep517.build --source .

      - uses: actions/upload-artifact@v3
        with:
          name: numina-wheels
          path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-11]
    steps:
      - uses: actions/checkout@v3
        
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.12.0
      
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: pp* cp36-* cp37-*
          
      - uses: actions/upload-artifact@v3
        with:
          name: numina-wheels
          path: ./wheelhouse/*.whl
        
  upload_pypi:
    name: Upload to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: numina-wheels
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}

