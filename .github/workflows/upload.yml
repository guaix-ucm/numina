name: Build wheels and upload to PyPI

# Build when a release is published
on:
  release:
    types: [published]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build
        run: python -m pip install build

      - name: Build sdist only
        run: python -m build -s

      - uses: actions/upload-artifact@v4
        with:
          name: numina-wheels-dist
          path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
        
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_BUILD: cp39-* cp310-* cp311-* cp312-* cp313-*
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_SKIP: '*_i686'
          
      - uses: actions/upload-artifact@v4
        with:
          name: numina-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
        
  upload_pypi:
    name: Upload to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4.1.7
        with:
          merge-multiple: true
          pattern: numina-wheels-*
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
